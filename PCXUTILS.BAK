#include <stdio.h>
#include "PCXUTILS.H"
#include "GRAPHICS.H"

int openPCX(PCX_Header *header, int loadPalette, char * path)
{
	FILE *input;
	IMAGE *loadedImage = (IMAGE *) malloc(sizeof(IMAGE));
	unsigned char *buffer;
	unsigned long fileLen;

	//PCX BUFFERS
	unsigned int paletteLocation;

	//COUNTERS
	int x, y = 0;
	int writeDataPtr = 0;
	unsigned char repeatByte;

	input = fopen(path, "rb");
	if (!input)
		return -1;

	fseek(input, 0, SEEK_END);
	fileLen = ftell(input);
	fseek(input, 0, SEEK_SET);

	buffer = (unsigned char *) malloc(fileLen+1);

	fread(buffer, fileLen, 1, input);

	fclose(input);

	header->manufbyte = buffer[0];
	header->pcxversion = buffer[1];
	header->rlebyte = buffer[2];
	if (header->manufbyte != 10 || header->rlebyte != 1)
		return -1;

	header->xmax = buffer[8] + 1;
	header->ymax = buffer[10] + 1;

	loadedImage->width = header->xmax;
	loadedImage->height = header->ymax;

	loadedImage->pixels = (unsigned char *) malloc(header->xmax*header->ymax);
	loadedImage->palette = (unsigned char *) malloc(768);

	if (loadPalette == 1)
	{
		x = 0;
		//LOAD PALETTE
		for (paletteLocation = fileLen - 768; paletteLocation < fileLen; paletteLocation++)
		{
			loadedImage->palette[x] = buffer[paletteLocation];
			x++;
		}
	}
	//LOAD DATA
	x = 128; //Start of data
	while (writeDataPtr < header->xmax * header->ymax)
	{
		//Encoded, count byte read
		if (buffer[x] >= 192)
		{
			repeatByte = buffer[x] - 192;
			x++;
			for (y = 0; y<repeatByte; y++) //Repeat countbyte
			{
				loadedImage->pixels[writeDataPtr] = buffer[x];
				writeDataPtr++;
			}
		}
		else
		{
			loadedImage->pixels[writeDataPtr] = buffer[x];
			writeDataPtr++;
		}
		x++;
	}
	return 1;
}